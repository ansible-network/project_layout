#!/usr/bin/python
# -*- coding: utf-8 -*-
# {{ copyright }}
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

"""
The {{ plugin.name }} filter plugin
"""
from __future__ import absolute_import, division, print_function

__metaclass__ = type

DOCUMENTATION = """
{{ docstring|d('') }}
"""

EXAMPLES = """
"""

from ansible.errors import AnsibleFilterError
from ansible_collections.{{ collection.namespace }}.{{ collection.name }}.plugins.module_utils.common.{{ plugin.name }} import (
    {{ plugin.name }},
)
from ansible_collections.ansible.utils.plugins.module_utils.common.argspec_validate import (
    AnsibleArgSpecValidator,
)

def _{{ plugin.name }}(*args, **kwargs):
    keys = {{ (docstring|from_yaml)["options"].keys() }}
    data = dict(zip(keys, args))
    data.update(kwargs)
    aav = AnsibleArgSpecValidator(
        data=data, schema=DOCUMENTATION, name="{{ plugin.name }}"
    )
    valid, errors, updated_data = aav.validate()
    if not valid:
        raise AnsibleFilterError(errors)
    return {{ plugin.name }}(**updated_data)

class FilterModule(object):
    """ {{ plugin.name }} filter plugin"""

    def filters(self):
        """a mapping of filter names to functions"""
        return {"{{ plugin.name }}": _{{ plugin.name }}}
